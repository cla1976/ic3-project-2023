# Generated by Django 4.2.4 on 2024-03-12 21:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_cryptography.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_career', models.CharField(max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Carrera',
                'verbose_name_plural': 'Carreras',
            },
        ),
        migrations.CreateModel(
            name='CareerSubjectYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=50)),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.career')),
            ],
            options={
                'verbose_name': 'Carrera y materia',
                'verbose_name_plural': 'Carrera y materias',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(max_length=50, unique=True)),
                ('ip', models.CharField(max_length=50, unique=True)),
                ('door_port', models.IntegerField()),
                ('date_purchased', models.DateField(null=True)),
                ('is_active', models.BooleanField(null=True)),
                ('is_synchronized', models.BooleanField(null=True)),
                ('user', models.CharField(max_length=50)),
                ('password', django_cryptography.fields.encrypt(models.CharField(max_length=128))),
                ('massive_opening', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Dispositivo',
                'verbose_name_plural': 'Dispositivos',
            },
        ),
        migrations.CreateModel(
            name='EventsDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=4, verbose_name='event_number')),
                ('major', models.CharField(blank=True, choices=[('0', 'All Events'), ('1', 'Event Alarm'), ('2', 'Device Exception'), ('3', 'Device Operation'), ('5', 'Device Event')], max_length=1, verbose_name='major_number')),
                ('description', models.CharField(max_length=100, null=True, verbose_name='event_description')),
            ],
            options={
                'verbose_name': 'Descripcion de Evento',
                'verbose_name_plural': 'Descripcion de Eventos',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
            },
        ),
        migrations.CreateModel(
            name='SubjectSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario_id', models.IntegerField(blank=True, null=True, verbose_name='ID de horario')),
                ('begin_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('day', multiselectfield.db.fields.MultiSelectField(choices=[('Monday', 'Lunes'), ('Tuesday', 'Martes'), ('Wednesday', 'Miércoles'), ('Thursday', 'Jueves'), ('Friday', 'Viernes'), ('Saturday', 'Sábado'), ('Sunday', 'Domingo')], max_length=255, null=True)),
                ('career_subject_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.careersubjectyear')),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.device', verbose_name='Dispositivos')),
            ],
            options={
                'verbose_name': 'Horario de materia',
                'verbose_name_plural': 'Horario de materias',
                'unique_together': {('horario_id', 'device')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Apellido')),
                ('dni', models.CharField(max_length=100, unique=True, verbose_name='DNI')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='Correo electrónico')),
                ('gender', models.CharField(choices=[('male', 'Hombre'), ('female', 'Mujer'), ('unknown', 'Sin especificar')], max_length=10, verbose_name='Género')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dirección')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Teléfono')),
                ('is_active', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=10, verbose_name='¿Fecha de habilitación?')),
                ('begin_time', models.DateTimeField(blank=True, null=True, verbose_name='Fecha inicio de habilitación')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Fecha final de habilitación')),
                ('is_staff', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=10, verbose_name='¿Usuario administrador?')),
                ('profile_type', models.CharField(choices=[('normal', 'Normal'), ('visitor', 'Visitante'), ('blackList', 'Bloqueado')], default='normal', max_length=10, verbose_name='Tipo de usuario del dipositivo')),
                ('file_image', models.FileField(blank=True, null=True, upload_to='user_profile_api/images/', verbose_name='Imagen')),
                ('card', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Tarjeta')),
                ('cardType', models.CharField(blank=True, choices=[('normalCard', 'Normal'), ('patrolCard', 'Mantenimiento'), ('hijackCard', 'Hijack'), ('superCard', 'Super'), ('dismissingCard', 'Destituir'), ('emergencyCard', 'Emergencia')], max_length=20, verbose_name='Tipo de tarjeta')),
                ('timeType', models.CharField(default='local', max_length=10, verbose_name='Modo de hora')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.device', verbose_name='Dispositivo')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='UserTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(max_length=100, verbose_name='Tipo de usuario')),
            ],
            options={
                'verbose_name': 'Tipos de usuarios',
                'verbose_name_plural': 'Tipos de usuarios',
            },
        ),
        migrations.CreateModel(
            name='UserProfileStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_verify_mode', models.CharField(blank=True, choices=[('cardOrFace', 'Tarjeta o cara'), ('cardOrfaceOrPw', 'Tarjeta, cara o clave'), ('cardOrPw', 'Tarjeta o clave'), ('card', 'Tarjeta'), ('cardOrFace', 'Cara o clave'), ('face', 'Cara')], max_length=30, null=True, verbose_name='Tipo de verificación')),
                ('door_right', models.CharField(max_length=100, null=True, verbose_name='Puerta proxima')),
                ('doorNo', models.CharField(max_length=100, null=True, verbose_name='Número de puerta')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, null=True, verbose_name='Fecha creación')),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now, editable=False, null=True, verbose_name='Fecha actualización')),
                ('card', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tarjeta')),
                ('card_type', models.CharField(blank=True, choices=[('normalCard', 'Normal'), ('patrolCard', 'Mantenimiento'), ('hijackCard', 'Hijack'), ('superCard', 'Super'), ('dismissingCard', 'Destituir'), ('emergencyCard', 'Emergencia')], max_length=20, null=True, verbose_name='Tipo de tarjeta')),
                ('time_type', models.CharField(default='local', max_length=10, null=True, verbose_name='Modo de hora')),
                ('subject', models.ManyToManyField(blank=True, to='user_profile_api.subjectschedule', verbose_name='Materias a asistir')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.userprofile')),
            ],
            options={
                'verbose_name': 'Alumno',
                'verbose_name_plural': 'Alumnos',
            },
        ),
        migrations.CreateModel(
            name='UserProfileMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sunday', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=3, verbose_name='Domingo')),
                ('sunday_time_begin', models.TimeField(null=True, verbose_name='Hora de inicio')),
                ('sunday_time_end', models.TimeField(null=True, verbose_name='Hora de fin')),
                ('monday', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=3, verbose_name='Lunes')),
                ('monday_time_begin', models.TimeField(null=True, verbose_name='Hora de inicio')),
                ('monday_time_end', models.TimeField(null=True, verbose_name='Hora de fin')),
                ('tuesday', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=3, verbose_name='Martes')),
                ('tuesday_time_begin', models.TimeField(null=True, verbose_name='Hora de inicio')),
                ('tuesday_time_end', models.TimeField(null=True, verbose_name='Hora de fin')),
                ('wednesday', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=3, verbose_name='Miércoles')),
                ('wednesday_time_begin', models.TimeField(null=True, verbose_name='Hora de inicio')),
                ('wednesday_time_end', models.TimeField(null=True, verbose_name='Hora de fin')),
                ('thursday', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=3, verbose_name='Jueves')),
                ('thursday_time_begin', models.TimeField(null=True, verbose_name='Hora de inicio')),
                ('thursday_time_end', models.TimeField(null=True, verbose_name='Hora de fin')),
                ('friday', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=3, verbose_name='Viernes')),
                ('friday_time_begin', models.TimeField(null=True, verbose_name='Hora de inicio')),
                ('friday_time_end', models.TimeField(null=True, verbose_name='Hora de fin')),
                ('saturday', models.CharField(choices=[(None, '-------'), ('Sí', 'Sí'), ('No', 'No')], default=None, max_length=3, verbose_name='Sábado')),
                ('saturday_time_begin', models.TimeField(null=True, verbose_name='Hora de inicio')),
                ('saturday_time_end', models.TimeField(null=True, verbose_name='Hora de fin')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.userprofile')),
            ],
            options={
                'verbose_name': 'Personal de Mantenimiento',
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.usertypes', verbose_name='Tipo de usuario dentro de la institución'),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(max_length=100, null=True)),
                ('location', models.CharField(max_length=100, null=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.device')),
            ],
            options={
                'verbose_name': 'Sala',
                'verbose_name_plural': 'Salas',
            },
        ),
        migrations.AddField(
            model_name='careersubjectyear',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile_api.subject'),
        ),
    ]
